<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smarttrip.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.smarttrip.domain.Comment" >
    <id column="commentId" property="commentId" jdbcType="CHAR" />
    <result column="productType" property="type" jdbcType="CHAR" />
    <result column="productId" property="productId" jdbcType="CHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="TINYINT" />
    <result column="commentTime" property="commentTime" jdbcType="CHAR" />
    <result column="visitorId" property="visitorId" jdbcType="CHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from comment
    where commentId = #{commentId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.smarttrip.domain.Comment" >
    insert into comment (commentId, productType, productId, 
      content, score, commentTime, 
      visitorId)
    values (#{commentId,jdbcType=CHAR}, #{productType,jdbcType=CHAR}, #{productId,jdbcType=CHAR}, 
      #{content,jdbcType=VARCHAR}, #{score,jdbcType=TINYINT}, #{commentTime,jdbcType=CHAR}, 
      #{visitorId,jdbcType=CHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.smarttrip.domain.Comment" >
    update comment
    set productType = #{productType,jdbcType=CHAR},
      productId = #{productId,jdbcType=CHAR},
      content = #{content,jdbcType=VARCHAR},
      score = #{score,jdbcType=TINYINT},
      commentTime = #{commentTime,jdbcType=CHAR},
      visitorId = #{visitorId,jdbcType=CHAR}
    where commentId = #{commentId,jdbcType=CHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select commentId, productType, productId, content, score, commentTime, visitorId
    from comment
    where commentId = #{commentId,jdbcType=CHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select commentId, productType, productId, content, score, commentTime, visitorId
    from comment
  </select>
  <select id="selectByRouteId" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select commentId, productType, productId, content, score, commentTime, visitorId
    from comment
    where productType="route" and productId=#{productId, jdbcType=CHAR}
  </select>
  <delete id="deleteCommentByVisitorId">
  	delete from comment
  	where visitorId = #{visitorId,jdbcType=CHAR}
  	, commentId in
  	 <foreach collection="array" item = "commentId" open="(" separator="," close=")">
  	 #{commentId,jdbcType=CHAR}  
    </foreach> 
  </delete>
  <select id="selectAllByConditions" resultMap="BaseResultMap" >
    select commentId, productType, productId, content, score, commentTime, visitorId
    from comment
    <where>
    	<if test="visitorId!=null  and visitorId!=''">
    		visitorId = #{visitorId,jdbcType=CHAR}
    	</if>
    	<if test="content!=null and content!=''">
    		AND content like #{content,jdbcType=CHAR}
    	</if>
    	<if test="productType!=null and productType!=''">
    		AND productType = #{productType,jdbcType=CHAR}
    	</if>
    	<if test="commentBeginTime!=null and commentBeginTime!='' and commentEndTime!=null and commentEndTime!=''">
    		AND commentTime &gt;= #{commentBeginTime,jdbcType=CHAR}
    		AND commentTime &lt;= #{commentEndTime,jdbcType=CHAR}   		
    	</if>
    </where>
  </select>
</mapper>