<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smarttrip.dao.RouteMapper" >
  <resultMap id="BaseResultMap" type="com.smarttrip.domain.Route" >
    <id column="routeId" property="routeId" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="feature" property="feature" jdbcType="VARCHAR" />
    <result column="period" property="period" jdbcType="SMALLINT" />
    <result column="map" property="map" jdbcType="CHAR" />
    <result column="briefRecommendation" property="briefRecommendation" jdbcType="VARCHAR" />
    <result column="commentCount" property="commentCount" jdbcType="INTEGER" />
    <result column="commetRatio" property="commetRatio" jdbcType="REAL" />
    <result column="purchaseCount" property="purchaseCount" jdbcType="INTEGER" />
    <result column="regionId" property="regionId" jdbcType="CHAR" />
    <result column="displayOrder" property="displayOrder" jdbcType="INTEGER" />
    <result column="backgroundImg" property="backgroundImg" jdbcType="CHAR" />
    <result column="createTime" property="createTime" jdbcType="CHAR" />
    <result column="modifyTime" property="modifyTime" jdbcType="CHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="detail" property="detail" jdbcType="LONGVARCHAR" />
    <result column="feeDescription" property="feeDescription" jdbcType="LONGVARCHAR" />
    <result column="bookingNotice" property="bookingNotice" jdbcType="LONGVARCHAR" />
    <result column="detailRecommendation" property="detailRecommendation" jdbcType="LONGVARCHAR" />
    <result column="bottomPrice" property="bottomPrice" jdbcType="CHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from route
    where routeId = #{routeId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.smarttrip.domain.Route" >
    insert into route (routeId, name, feature, 
      period, map, briefRecommendation, 
      commentCount, commetRatio, purchaseCount, 
      regionId, displayOrder, backgroundImg, 
      createTime, modifyTime, status, 
      detail, feeDescription, bookingNotice, 
      detailRecommendation, bottomPrice)
    values (#{routeId,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{feature,jdbcType=VARCHAR}, 
      #{period,jdbcType=SMALLINT}, #{map,jdbcType=CHAR}, #{briefRecommendation,jdbcType=VARCHAR}, 
      #{commentCount,jdbcType=INTEGER}, #{commetRatio,jdbcType=REAL}, #{purchaseCount,jdbcType=INTEGER}, 
      #{regionId,jdbcType=CHAR}, #{displayOrder,jdbcType=INTEGER}, #{backgroundImg,jdbcType=CHAR}, 
      #{createTime,jdbcType=CHAR}, #{modifyTime,jdbcType=CHAR}, #{status,jdbcType=CHAR}, 
      #{detail,jdbcType=LONGVARCHAR}, #{feeDescription,jdbcType=LONGVARCHAR}, #{bookingNotice,jdbcType=LONGVARCHAR}, 
      #{detailRecommendation,jdbcType=LONGVARCHAR}, #{bottomPrice, jdbcType=CHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.smarttrip.domain.Route" >
    update route
    set name = #{name,jdbcType=VARCHAR},
      feature = #{feature,jdbcType=VARCHAR},
      period = #{period,jdbcType=SMALLINT},
      map = #{map,jdbcType=CHAR},
      briefRecommendation = #{briefRecommendation,jdbcType=VARCHAR},
      commentCount = #{commentCount,jdbcType=INTEGER},
      commetRatio = #{commetRatio,jdbcType=REAL},
      purchaseCount = #{purchaseCount,jdbcType=INTEGER},
      regionId = #{regionId,jdbcType=CHAR},
      displayOrder = #{displayOrder,jdbcType=INTEGER},
      backgroundImg = #{backgroundImg,jdbcType=CHAR},
      createTime = #{createTime,jdbcType=CHAR},
      modifyTime = #{modifyTime,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      detail = #{detail,jdbcType=LONGVARCHAR},
      feeDescription = #{feeDescription,jdbcType=LONGVARCHAR},
      bookingNotice = #{bookingNotice,jdbcType=LONGVARCHAR},
      detailRecommendation = #{detailRecommendation,jdbcType=LONGVARCHAR},
      bottomPrice = #{bottomPrice, jdbcType=CHAR}
    where routeId = #{routeId,jdbcType=CHAR}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select routeId, name, feature, period, map, briefRecommendation, commentCount, commetRatio, 
    purchaseCount, regionId, displayOrder, backgroundImg, createTime, modifyTime, status, 
    detail, feeDescription, bookingNotice, detailRecommendation, bottomPrice
    from route
    where routeId = #{routeId,jdbcType=CHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select routeId, name, feature, period, map, briefRecommendation, commentCount, commetRatio, 
    purchaseCount, regionId, displayOrder, backgroundImg, createTime, modifyTime, status, 
    detail, feeDescription, bookingNotice, detailRecommendation, bottomPrice
    from route
  </select>
  <select id="selectAllCount" resultType="java.lang.Integer">
  	select count(*)
  	from route
  </select>
  <select id="selectTop3ByDisplayOrder" resultMap="BaseResultMap">
  	select routeId, name, feature, period, map, briefRecommendation, commentCount, commetRatio, 
    purchaseCount, regionId, displayOrder, backgroundImg, createTime, modifyTime, status, 
    detail, feeDescription, bookingNotice, detailRecommendation, bottomPrice
    from route 
    order by displayOrder desc
    limit 3
  </select>
  <select id="selectPeriods" resultType="java.lang.Integer">
  	select period
  	from route
  </select>
  <select id="selectByPeriod" resultMap="BaseResultMap" parameterType="int">
	select routeId, name, feature, period, map, briefRecommendation, commentCount, commetRatio, 
    purchaseCount, regionId, displayOrder, backgroundImg, createTime, modifyTime, status, 
    detail, feeDescription, bookingNotice, detailRecommendation, bottomPrice
    from route
    where period = #{period, jdbcType=INTEGER} 	
  </select>
  <select id="selectByRegionId" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select routeId, name, feature, period, map, briefRecommendation, commentCount, commetRatio, 
    purchaseCount, regionId, displayOrder, backgroundImg, createTime, modifyTime, status, 
    detail, feeDescription, bookingNotice, detailRecommendation, bottomPrice
    from route
    where regionId = #{regionId, jdbcType=CHAR}
  </select>
  <select id="selectByRegionIdAndPeriod" resultMap="BaseResultMap">
  	select routeId, name, feature, period, map, briefRecommendation, commentCount, commetRatio, 
    purchaseCount, regionId, displayOrder, backgroundImg, createTime, modifyTime, status, 
    detail, feeDescription, bookingNotice, detailRecommendation, bottomPrice
    from route
    where regionId = #{regionId, jdbcType=CHAR} and #{period, jdbcType=INTEGER}
  </select>
  <select id="selectByConditions" resultMap="BaseResultMap">
   	select routeId, name, feature, period, map, briefRecommendation, commentCount, commetRatio, 
    purchaseCount, regionId, displayOrder, backgroundImg, createTime, modifyTime, status, 
    detail, feeDescription, bookingNotice, detailRecommendation, bottomPrice
    from route
	where status = '1'
		<if test="regionId != null and regionId.size() > 0" >
			AND regionId in
			<foreach item="regionId" index="index" collection="regionId" open="(" separator="," close=")">
				#{regionId}
			</foreach>
		</if>
		<if test="routeId != null and routeId.size() > 0">
			AND theme in
			<foreach item="routeId" index="index" collection="routeId" open="(" separator="," close=")">
				#{routeId}
			</foreach>
		</if>
		<if test="period != null and period.length > 0">
			AND period in
			<foreach item="period" index="index" collection="period" open="(" separator="," close=")">
				#{period}
			</foreach>
		</if>
	order by #{sortField}	
  	limit #{left} , #{right}
  </select>
  <select id="selectByCondition" resultMap="BaseResultMap">
  	select routeId, name, feature, period, map, briefRecommendation, commentCount, commetRatio, 
    purchaseCount, regionId, displayOrder, backgroundImg, createTime, modifyTime, status, 
    detail, feeDescription, bookingNotice, detailRecommendation, bottomPrice
    from route
    <where>
    	<if test="status != null">
    		status = #{status, jdbcType=CHAR}
    	</if>
    	<if test="name != null">
    		name like #{name, jdbcType=CHAR}
    	</if>
    	<if test="regionId != null and regionId.length > 0" >
			AND regionId in
			<foreach item="regionId" index="index" collection="array" open="(" separator="," close=")">
				#{regionId,jdbcType=CHAR}
			</foreach>
		</if>
		<if test="routeId != null and routeId.length > 0">
			AND theme in
			<foreach item="routeId" index="index" collection="array" open="(" separator="," close=")">
				#{routeId,jdbcType=CHAR}
			</foreach>
		</if>
		<if test="period != null and period.length > 0">
			AND period in
			<foreach item="period" index="index" collection="array" open="(" separator="," close=")">
				#{period}
			</foreach>
		</if>
    </where>
  </select>
  <select id="updateStatusByRouteId">
  	update route
    set status = #{status, jdbcType=CHAR}
    where routeId = #{routeId,jdbcType=CHAR}
  </select>
</mapper>